// Generated by view binder compiler. Do not edit!
package com.week1.cashregisterpart1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.week1.cashregisterpart1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRestockBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRestockBack;

  @NonNull
  public final Button btnRestockConfirm;

  @NonNull
  public final TextView enterStockHeader;

  @NonNull
  public final View restockDivider;

  @NonNull
  public final ListView restockListview;

  @NonNull
  public final TextView restockProductName;

  @NonNull
  public final TextView restockProductPrice;

  @NonNull
  public final TextView restockProductQty;

  @NonNull
  public final TextView restockTop;

  @NonNull
  public final EditText restockValue;

  private ActivityRestockBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnRestockBack,
      @NonNull Button btnRestockConfirm, @NonNull TextView enterStockHeader,
      @NonNull View restockDivider, @NonNull ListView restockListview,
      @NonNull TextView restockProductName, @NonNull TextView restockProductPrice,
      @NonNull TextView restockProductQty, @NonNull TextView restockTop,
      @NonNull EditText restockValue) {
    this.rootView = rootView;
    this.btnRestockBack = btnRestockBack;
    this.btnRestockConfirm = btnRestockConfirm;
    this.enterStockHeader = enterStockHeader;
    this.restockDivider = restockDivider;
    this.restockListview = restockListview;
    this.restockProductName = restockProductName;
    this.restockProductPrice = restockProductPrice;
    this.restockProductQty = restockProductQty;
    this.restockTop = restockTop;
    this.restockValue = restockValue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRestockBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRestockBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_restock, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRestockBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_restock_back;
      Button btnRestockBack = ViewBindings.findChildViewById(rootView, id);
      if (btnRestockBack == null) {
        break missingId;
      }

      id = R.id.btn_restock_confirm;
      Button btnRestockConfirm = ViewBindings.findChildViewById(rootView, id);
      if (btnRestockConfirm == null) {
        break missingId;
      }

      id = R.id.enter_stock_header;
      TextView enterStockHeader = ViewBindings.findChildViewById(rootView, id);
      if (enterStockHeader == null) {
        break missingId;
      }

      id = R.id.restock_divider;
      View restockDivider = ViewBindings.findChildViewById(rootView, id);
      if (restockDivider == null) {
        break missingId;
      }

      id = R.id.restock_listview;
      ListView restockListview = ViewBindings.findChildViewById(rootView, id);
      if (restockListview == null) {
        break missingId;
      }

      id = R.id.restock_productName;
      TextView restockProductName = ViewBindings.findChildViewById(rootView, id);
      if (restockProductName == null) {
        break missingId;
      }

      id = R.id.restock_productPrice;
      TextView restockProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (restockProductPrice == null) {
        break missingId;
      }

      id = R.id.restock_productQty;
      TextView restockProductQty = ViewBindings.findChildViewById(rootView, id);
      if (restockProductQty == null) {
        break missingId;
      }

      id = R.id.restock_top;
      TextView restockTop = ViewBindings.findChildViewById(rootView, id);
      if (restockTop == null) {
        break missingId;
      }

      id = R.id.restock_value;
      EditText restockValue = ViewBindings.findChildViewById(rootView, id);
      if (restockValue == null) {
        break missingId;
      }

      return new ActivityRestockBinding((ConstraintLayout) rootView, btnRestockBack,
          btnRestockConfirm, enterStockHeader, restockDivider, restockListview, restockProductName,
          restockProductPrice, restockProductQty, restockTop, restockValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
